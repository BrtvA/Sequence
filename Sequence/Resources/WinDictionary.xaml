<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:animations="clr-namespace:Sequence.Resources"
                    xmlns:ii="http://schemas.microsoft.com/expression/2010/interactivity">
    <!--Стиль окна-->
    <Style x:Key="windowsStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="AllowsTransparency" Value="True"/>
    </Style>

    <ControlTemplate x:Key="windowsTemplate" TargetType="Window">
        <Border CornerRadius="15"
                BorderThickness="5">
            <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#462AD8" Offset="0"/>
                    <GradientStop Color="#DA34AE" Offset="0.75"/>
                    <GradientStop Color="#8A16C1" Offset="1"/>
                </LinearGradientBrush>
            </Border.BorderBrush>
            <Border.Background>
                <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                    <GradientStop Color="#060531" Offset="0"/>
                    <GradientStop Color="#1B1448" Offset="0.75"/>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>
                <Grid.Resources>
                    <Style TargetType="Button">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FontFamily" Value="Montserrat"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="IsDefault" Value="True"/>
                    </Style>

                    <Style TargetType="TextBlock">
                        <Setter Property="FontFamily" Value="Montserrat"/>
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="FontSize" Value="20"/>
                        <Setter Property="Foreground" Value="DarkGray"/>
                    </Style>

                    <Style BasedOn="{StaticResource {x:Type Button}}" x:Key="minimizeBtn" TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="3"/>
                        <Setter Property="Background" Value="#28AEED"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border CornerRadius="5"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter VerticalAlignment="Center"
                                                          HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard SpeedRatio="10">
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="5"/>
                                            <DoubleAnimation Storyboard.TargetProperty="FontSize" To="12"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard SpeedRatio="10">
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin"/>
                                            <DoubleAnimation Storyboard.TargetProperty="FontSize"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                            </EventTrigger.Actions>
                            </EventTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1073D5"/>
                                <Setter Property="Foreground" Value="DarkGray"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#28AEED"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style BasedOn="{StaticResource minimizeBtn}" x:Key="closeBtn" TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#DA34AE"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#7d0a6b"/>
                                
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#DA34AE"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="10"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="1" 
                           Text="{TemplateBinding Title}"
                           VerticalAlignment="Bottom"/>
                <Button Grid.Row="0" Grid.Column="2"
                        Content="-"
                        Style="{StaticResource minimizeBtn}"/>
                <Button Grid.Row="0" Grid.Column="3"
                        Content="X"
                        Style="{StaticResource closeBtn}"/>
                <Grid Grid.Row="1" Grid.ColumnSpan="5">
                    <ContentPresenter HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      Content="{TemplateBinding Content}"/>
                </Grid>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="visibilityRow50" TargetType="RowDefinition">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=modeBox,Path=SelectedIndex}" 
                         Value="0">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <animations:GridLengthAnimation BeginTime="0:0:0"
                                                            Duration="0:0:0.1"
                                                            From="0"
                                                            Storyboard.TargetProperty="Height"
                                                            To="50"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <animations:GridLengthAnimation BeginTime="0:0:0"
                                                            Duration="0:0:0.1"
                                                            From="50"
                                                            Storyboard.TargetProperty="Height"
                                                            To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--Стили Button-->
    <Style x:Key="blueBtn" TargetType="Button">
        <Setter Property="Margin" Value="15,5,15,5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="#28AEED"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5"
                                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard SpeedRatio="10">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="25,5,25,5"/>
                            <DoubleAnimation Storyboard.TargetProperty="FontSize" To="12"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard SpeedRatio="10">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin"/>
                            <DoubleAnimation Storyboard.TargetProperty="FontSize"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1073D5"/>
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#28AEED"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="visibilityBlueBtn" TargetType="Button"
           BasedOn="{StaticResource blueBtn}">
        <Style.Triggers>
            <DataTrigger  Binding="{Binding ElementName=modeBox,Path=SelectedIndex}" 
                          Value="0">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard SpeedRatio="10">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard SpeedRatio="10">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger  Binding="{Binding ElementName=modeBox,Path=SelectedIndex}" 
                          Value="1">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--Стили TextBlock-->
    <Style x:Key="textBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="15,5,15,5"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--Стили TextBox-->
    <Style x:Key="textBox" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="CaretBrush" Value="LightGray"/>
    </Style>

    <Style x:Key="lineOnText" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource textBox}">
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <Setter Property="IsEnabled" Value="False"/>
    </Style>

    <Style x:Key="resultText" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource textBox}">
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="20,0,0,0"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    
    <!--Стили ComboBox-->
    <Style x:Key="comboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="SelectedIndex" Value="0"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    
    <!--Стили CheckBox-->
    <Style x:Key="checkBox" TargetType="CheckBox">
        <Setter Property="Margin" Value="15,5,15,5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="DarkGray"/>
    </Style>

    <!--<Style x:Key="resultCheck" TargetType="CheckBox"
           BasedOn="{StaticResource checkBox}">
        <DataTrigger Binding="{Binding ElementName=selectAllBtn,Path=IsPressed}"
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsChecked"
                                                            FillBehavior="HoldEnd">
                                <DiscreteBooleanKeyFrame KeyTime="00:00:00"
                                                         Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding ElementName=resetBtn,Path=IsPressed}"
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsChecked"
                                                            FillBehavior="HoldEnd">
                                <DiscreteBooleanKeyFrame KeyTime="00:00:00"
                                                         Value="False"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>-->
    
    <!--Стили ProgressBar-->
    <Style x:Key="progressBar" TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar" >
                    <Grid x:Name="Root">
                        <Border Name="PART_Track" 
                                CornerRadius="15" 
                                Background="Transparent"
                                BorderBrush="ForestGreen"
                                BorderThickness="5" />
                        <Border Name="PART_Indicator" 
                                CornerRadius="15" 
                                Background="ForestGreen" 
                                HorizontalAlignment="Left" />
                        <TextBlock VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Text="In Progress"
                                   FontSize="20"
                                   Foreground="White"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="Root" Property="Width"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"/>
                            <Setter TargetName="Root" Property="Height"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>